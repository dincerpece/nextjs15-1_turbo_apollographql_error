import type { Metadata } from "next";
import localFont from "next/font/local";
import { ApolloProvider } from '@/lib/apollo/ApolloProvider'
import { getClient } from '@/lib/apollo/ApolloClient'
import { UserGql } from '@/gql/client/Querys'
import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const { data } = await (
      await getClient()
  ).query({
    query: UserGql,
  })

  const user = data?.user?.data
  console.log(user)

  return (
      <ApolloProvider>
        <html lang="en">
        <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <div className={'p-4 bg-gray-400/20'}>{user ? <span>{user.userName}</span> : <span>User not found</span>}</div>
            {children}
        </body>
        </html>
      </ApolloProvider>
  );
}
